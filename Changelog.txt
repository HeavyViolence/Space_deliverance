0.1.0001.0:

Project setup

Implemented:

BackgroundScroller
CameraHolder
CameraShaker
AuxMath
SceneLoader
ISavable
SavableData
SavableEntity
SavableEntityEditor
SavingSystem
SavingStartupEventArgs
SceneInstance
HiddenSceneInstance
GlobalInstance
HiddenGlobalInstance

0.1.0002.0:

Implemented:

Dustfield
DustfieldSwitch
RangedInt
RangedFloat

0.1.0003.0:

Implemented:

Space background changes based on currently active scene
MovementConfig
MovementConfigEditor
RangedFloat functionality expanded
RangedInt functionality expanded

Bug fixes:

RangedFloat random value may exceed its max value up to 1

0.1.0004.0:

Implemented:

Audio mixer
AudioAccess
AudioProperties
AudioCollection
AudioCollectionEditor
AudioPlayer
AudioPlayerSavableData

Improvements:

Improved performance of MovementConfig.Speed2D
Improved performance of SavingSystem

Bug fixes:

SavingSystem.Deregister() cannot record a newly captured state of a SavableEntity if there already is a previously captured state stored

Functionality expanded:

MovementConfig

0.1.0005.0:

Improvements:

Unnecessary SavableData data shell is removed from SavingSystem
SavingSystem behaviour improved
SavableEntity behaviour improved
Build type changed to WebGL

Bug fixes:

SavableEntity didn't have a proper implementation of GetHashCode()

Imported:

Music
Weapons audio effects
Misc audio effect

0.1.0006.0:

Implemented:

MusicPlayer
PlayerControls
Movement
DamageDealer
IDamageable
IDestroyable
IMovementBehaviourSwitch
HitEventArgs
DamageReceivedEventArgs
DestroyedEventArgs

Functionality expanded:

AuxMath
SavingSystem

Bug fixes:

AudioPlayerSavableData cannot be serialized
SavingSystem cannot save any data if savable entities do not deregister itself
SavableEntity was able to accept an invalid state

0.1.0007.0:

Implemented:

SavegameLoadingFailedEventArgs
AuxMath.Encode()
AuxMath.Decode()

Bug fixes:

AuxMath.DeserializeObject() crash on corrupted data deserialization attempt
AuxMath.EncodeOrDecode() returns invalid format
SavingSystem crash on corrupted savegame loading attempt
SavingSystem cannot access savegame file directory
SavableEntity.SetState() cannot properly distinguish between many objects being pass as a single boxed object
Save data encoding changed from simple charXOR to DES-based for much more stability and fault tolerance

0.2.0001.0:

Milestones:

Player implemented
Player can now move

Implemented:

PlayerMovement

Removed:

SavegameLoadFailedEventArgs

Bug fixes:

Removed unreachable events from SavingSystem
Camera shake cannot execute for movement config properties